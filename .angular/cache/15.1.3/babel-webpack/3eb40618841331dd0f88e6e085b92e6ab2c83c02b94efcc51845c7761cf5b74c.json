{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet ContactComponent = class ContactComponent {\n  constructor(emailService) {\n    this.emailService = emailService;\n    this.submitted = false;\n    this.disabled = true;\n    this.confirmButtonColor = \"#0b91b8\";\n  }\n  onSubmit() {\n    console.log(\"clicked\");\n    if (this.contactForm.invalid) {\n      console.log(\"inside if\");\n      this.submitted = true;\n    } else {\n      console.log(\"inside else\");\n      this.submitted = true;\n      var myFormData = new FormData();\n      myFormData.append('name', this.contactForm.value.name);\n      myFormData.append('email', this.contactForm.value.email);\n      myFormData.append('subject', this.contactForm.value.subject);\n      myFormData.append('message', this.contactForm.value.message);\n      console.log(\"Name: \" + myFormData.get(\"name\"));\n      console.log(\"Email: \" + myFormData.get(\"email\"));\n      console.log(\"Subject: \" + myFormData.get(\"subject\"));\n      console.log(\"Message: \" + myFormData.get(\"message\"));\n      let jsonData = {\n        name: myFormData.get(\"name\"),\n        from: myFormData.get(\"email\"),\n        to: \"dagmawi@convergencesolutons.com\",\n        subject: myFormData.get(\"subject\"),\n        text: `A contact mail sent from: ${myFormData.get(\"name\")} <${myFormData.get(\"email\")}> \\n\\n${myFormData.get(\"message\")}`\n      };\n      this.emailService.sendEmail(\"https://convergencesolutons.com/sendmail/\", jsonData).subscribe(data => {\n        let res = data;\n        console.log(`👏 > ${jsonData.from} has successfully sent an mail with message id: ${res.messageId}`);\n        this.notice = \"Thank you for reaching out\";\n        this.message = \"We'll get back to you soon\";\n        this.resultIcon = \"success\";\n      }, err => {\n        console.log(err);\n        this.notice = \"Oops\";\n        this.message = \"Something went wrong...\";\n        this.resultIcon = \"error\";\n      });\n    }\n  }\n  ngOnInit() {\n    this.contactForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      subject: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      message: new FormControl('', Validators.required)\n    });\n    if (this.contactForm.invalid) {\n      this.disabled = true;\n    } else {\n      this.disabled = false;\n    }\n  }\n};\nContactComponent = __decorate([Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})], ContactComponent);\nexport { ContactComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","ContactComponent","constructor","emailService","onSubmit","console","log","contactForm","invalid","submitted","myFormData","FormData","append","value","name","email","subject","message","get","jsonData","from","to","text","sendEmail","subscribe","data","res","messageId","notice","resultIcon","err","ngOnInit","required","disabled","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/dagi/AngularJS/con-app/src/app/contact/contact.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { EmailForwarderService } from '../Services/email-forwarder.service';\nimport { SweetAlertIcon } from 'sweetalert2';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\n\nexport class ContactComponent implements OnInit {\n  private http: HttpClient;\n  public contactForm: FormGroup;\n  submitted = false;\n  disabled = true;\n\n  notice: string;\n  message: string;\n  resultIcon: SweetAlertIcon;\n  confirmButtonColor = \"#0b91b8\";\n\n  constructor(private emailService: EmailForwarderService) {}\n\n  onSubmit() {\n    console.log(\"clicked\");\n\n      if (this.contactForm.invalid) {\n        console.log(\"inside if\");\n        this.submitted = true;\n      }\n      else{\n        console.log(\"inside else\");\n        this.submitted = true;\n        var myFormData = new FormData();\n\n        myFormData.append('name', this.contactForm.value.name);\n        myFormData.append('email', this.contactForm.value.email);\n        myFormData.append('subject', this.contactForm.value.subject);\n        myFormData.append('message', this.contactForm.value.message);\n\n        console.log(\"Name: \" + myFormData.get(\"name\")); \n        console.log(\"Email: \" + myFormData.get(\"email\"));\n        console.log(\"Subject: \" + myFormData.get(\"subject\"));\n        console.log(\"Message: \" + myFormData.get(\"message\"));\n\n        let jsonData = {\n          name: myFormData.get(\"name\"),\n          from: myFormData.get(\"email\"),\n          to: \"dagmawi@convergencesolutons.com\", \n          subject: myFormData.get(\"subject\"), \n          text: `A contact mail sent from: ${myFormData.get(\"name\")} <${myFormData.get(\"email\")}> \\n\\n${myFormData.get(\"message\")}`\n        }\n        \n        this.emailService.sendEmail(\"https://convergencesolutons.com/sendmail/\", jsonData).subscribe(\n            data => {\n              let res:any = data; \n                console.log(\n                  `👏 > ${jsonData.from} has successfully sent an mail with message id: ${res.messageId}`\n                );\n\n                this.notice = \"Thank you for reaching out\";\n                this.message = \"We'll get back to you soon\";\n                this.resultIcon = \"success\";\n            },\n            err => {\n                console.log(err);\n                this.notice = \"Oops\";\n                this.message = \"Something went wrong...\";\n                this.resultIcon = \"error\";\n            });\n      }\n\n  }\n\n  ngOnInit(): void {\n    this.contactForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      subject: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      message: new FormControl('', Validators.required)\n    });\n\n    if (this.contactForm.invalid) {\n      this.disabled = true;\n    }\n    else {\n      this.disabled = false;\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}